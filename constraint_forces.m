%% constraint_forces.m
%
% Description:
%   function that sorts the constraint forces into a 4x1 vector
%
% Inputs:
%   F_active: the active forces as computed by robot_dynamics
%   params: a struct with many elements, generated by calling init_params.m
%
% Outputs:
%   F: a 4x1 vector of constraint forces

function [F] = constraint_forces(F_active,params)

F = zeros(4,1);  % F = [F_l;F_r;F_top;F_bot]

if sum(F_active) ~= 0
    
    i_force = 0;
    % add in the unilateral forces
    for ic = 1:4  % cycle through the unilateral constraints
        if params.sim.constraints.uni(ic) == 1  % if a constraint is active, assign a force
            i_force = i_force + 1;
            F(ic) = F_active(i_force);
        end
    end
    
end

end


